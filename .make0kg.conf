#--------------------------------------------------------------------
# Optimized makepkg.conf for x86-64-v3 CPUs
#--------------------------------------------------------------------

# Core compilation flags
CFLAGS="-march=x86-64-v3 -O3 -pipe \
        -mavx2 -mfma -mbmi -mbmi2 -mf16c -mrdrnd -mpopcnt -mabm \
        -fno-plt -fexceptions -fopenmp \
        -falign-functions=32 -fno-math-errno -fno-trapping-math \
        -fomit-frame-pointer -fstack-clash-protection \
        -fPIC -Wp,-D_FORTIFY_SOURCE=1 \
        -fno-semantic-interposition \
        -fdevirtualize-at-ltrans -fipa-pta \
        -ffast-math -funroll-loops"

# C++ specific flags
CXXFLAGS="$CFLAGS -Wp,-D_GLIBCXX_ASSERTIONS -fvisibility-inlines-hidden"

# Kernel-specific flags
export CFLAGS_KERNEL="$CFLAGS"
export CXXFLAGS_KERNEL="$CXXFLAGS"
export CFLAGS_MODULE="$CFLAGS"
export CXXFLAGS_MODULE="$CXXFLAGS"
export KBUILD_CFLAGS="$CFLAGS"
export KCFLAGS="-O3"
export KCPPFLAGS="$KCFLAGS"

# Linker optimizations
LDFLAGS="-Wl,-O2,--sort-common,--as-needed,-z,now -fuse-linker-plugin"

# Link Time Optimization (LTO)
LTOFLAGS="-flto=fat"

# Rust compiler optimizations
RUSTFLAGS="-C opt-level=3 -C target-cpu=x86-64-v3 -C lto=fat -C codegen-units=1"

# Parallel compilation
MAKEFLAGS="-j$(nproc)"
NINJAFLAGS="-j$(nproc)"

# Toolchain setup
export CC="gcc"
export CXX="g++"
export AR="gcc-ar"
export NM="gcc-nm"
export RANLIB="gcc-ranlib"

# Makepkg options
OPTIONS=(strip !docs !libtool !staticlibs emptydirs !zipman purge !debug lto)

# Compression settings (optional: fast and efficient)
PKGEXT='.pkg.tar.zst'
COMPRESSZST=(zstd -c -z -q -T0 --ultra -22 -)
