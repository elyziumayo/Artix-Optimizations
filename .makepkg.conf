
# Core compilation flags
CFLAGS="-march=x86-64-v3 -mtune=native -O3 -pipe \
        -fno-plt -fexceptions -fopenmp \
        -falign-functions=64 -fno-math-errno -fno-trapping-math \
        -fomit-frame-pointer -fstack-clash-protection \
        -fPIC -Wp,-D_FORTIFY_SOURCE=3 \
        -fno-semantic-interposition -fgraphite-identity -floop-nest-optimize \
        -fdevirtualize-at-ltrans -fipa-pta -fipa-cp-clone \
        -funsafe-math-optimizations -ffinite-math-only \
        -fassociative-math -freciprocal-math \
        -funroll-loops -flto=8 -fuse-linker-plugin -fno-ident -ffast-math"

# C++ specific flags
CXXFLAGS="$CFLAGS -Wp,-D_GLIBCXX_ASSERTIONS -fvisibility-inlines-hidden"

# Kernel specific flags
export CFLAGS_KERNEL="$CFLAGS"
export CXXFLAGS_KERNEL="$CXXFLAGS"
export CFLAGS_MODULE="$CFLAGS"
export CXXFLAGS_MODULE="$CXXFLAGS"
export KBUILD_CFLAGS="$CFLAGS"
export KCFLAGS="-O3"
export KCPPFLAGS="$KCFLAGS"

# Linker flags (CMake and general linker optimizations)
LDFLAGS="-Wl,-O2,--sort-common,--as-needed,-z,relro,-z,now"

# Rust compiler flags
RUSTFLAGS="-C opt-level=3 -C target-cpu=x86-64-v3 -C codegen-units=1 -C lto=fat \
           -C link-arg=-Wl,-O2 -C target-feature=+avx2,+bmi2,+fma"

# Maximum parallel builds (adjust as per your CPU threads)
MAKEFLAGS="-j$(($(nproc)*2))"
NINJAFLAGS="$MAKEFLAGS"

# Toolchain binaries
export CC="gcc"
export CXX="g++"
export AR="gcc-ar"
export NM="gcc-nm"
export RANLIB="gcc-ranlib"

# Compression utility used by makepkg (if you want to use zstd uncomment next line)
# COMPRESSZST="zstd -q --rm -19 -T0"
# COMPRESSZST_EXT=".zst"

# Makepkg options for smaller and faster builds
OPTIONS=(strip docs !libtool !staticlibs emptydirs zipman purge !debug lto)

# Optional: Enable ccache if installed (comment out if not used)
# export CC="ccache gcc"
# export CXX="ccache g++"
