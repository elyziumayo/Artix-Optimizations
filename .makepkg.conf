# Core compilation flags
CFLAGS="-march=x86-64-v3 -mtune=generic -O3 -pipe \
        -fno-plt -fexceptions -fopenmp \
        -falign-functions=64 -fno-math-errno -fno-trapping-math \
        -fomit-frame-pointer -fstack-clash-protection \
        -fPIC -Wp,-D_FORTIFY_SOURCE=3 \
        -fno-semantic-interposition -fgraphite-identity -floop-nest-optimize \
        -fdevirtualize-at-ltrans -fipa-pta -fipa-cp-clone \
        -funsafe-math-optimizations -ffinite-math-only \
        -fassociative-math -freciprocal-math \
        -funroll-loops -flto=auto -fuse-linker-plugin"

# C++ specific flags
CXXFLAGS="$CFLAGS -Wp,-D_GLIBCXX_ASSERTIONS \
          -fvisibility-inlines-hidden"

# Kernel-specific flags
export CFLAGS_KERNEL="$CFLAGS"
export CXXFLAGS_KERNEL="$CXXFLAGS"
export CFLAGS_MODULE="$CFLAGS"
export CXXFLAGS_MODULE="$CXXFLAGS"
export KBUILD_CFLAGS="$CFLAGS"
export KCFLAGS="-O3"
export KCPPFLAGS="$KCFLAGS"

# Linker optimizations (CMake compatible)
LDFLAGS="-Wl,-O2,--sort-common,--as-needed,-z,relro,-z,now"

# Rust optimizations
RUSTFLAGS="-C opt-level=3 -C target-cpu=x86-64-v3 \
           -C codegen-units=1 -C lto=fat -C link-arg=-Wl,-O2"

# Maximum parallel builds
MAKEFLAGS="-j$(nproc)"
NINJAFLAGS="-j$(nproc)"

# Environment setup
export CC="gcc"
export CXX="g++"
export AR="gcc-ar"
export NM="gcc-nm"
export RANLIB="gcc-ranlib"

# Makepkg options
OPTIONS=(strip docs !libtool !staticlibs emptydirs zipman purge !debug lto)
